#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include<stdbool.h>

#define V 5
#define MAX INT_MAX

int minDistance(int dist[], bool sptSet[])
{
   int min = MAX, min_index;
  
   for (int v = 0; v < V; v++)
     if (sptSet[v] == false && dist[v] <= min)
         min = dist[v], min_index = v;
  
   return min_index;
}

void dijkstra(int graph[V][V], int src)
{
     int dist[V];
     bool sptSet[V];
  
     for (int i = 0; i < V; i++)
        dist[i] = MAX, sptSet[i] = false;
  
     dist[src] = 0;
  
     for (int count = 0; count < V-1; count++)
     {
       int u = minDistance(dist, sptSet);
  
       sptSet[u] = true;
  
       for (int v = 0; v < V; v++)
  
         if (!sptSet[v] && graph[u][v] && dist[u] != MAX 
                                       && dist[u]+graph[u][v] < dist[v])
            dist[v] = dist[u] + graph[u][v];
     }
  
     printf("Vertex Distance from Source\n");
     for (int i = 0; i < V; i++)
        printf("%d \t\t %d\n", i, dist[i]);
}

int main()
{
   int graph[V][V] = {{0, 4, 2, 0, 0},
                      {0, 0, 3, 2, 3},
                      {0, 1, 0, 4, 5},
                      {0, 0, 0, 0, 0},
                      {0, 0, 0, -5, 0}
                     };
  
    dijkstra(graph, 0);
  
    return 0;
}
